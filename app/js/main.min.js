/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/src/js/";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(1);


/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	// Canvas
	__webpack_require__(2);
	__webpack_require__(3);


/***/ },
/* 2 */
/***/ function(module, exports) {

	// background contains the static canvas elements
	var background = document.getElementById("static");
	var backgroundContext = background.getContext("2d");
	
	// Settings for the background - move out to a separate file
	var settings = {
	  backgroundColor: "#8CD1E6",
	  pathColor: "gray"
	}
	
	// Drawing the background
	backgroundContext.fillStyle = settings.backgroundColor;
	backgroundContext.fillRect(0,0,background.width,background.height);
	
	/* Main path will go from [0, 500], [75, 500], [75, 100], [225, 100], [225, 500], [375, 500], [375, 100], [525, 100], [525, 500], [675, 500], [675, 100], [825, 100], [825, 500], [900, 500] */
	
	// Drawing the path - width of the path is 50px
	backgroundContext.fillStyle = settings.pathColor;
	
	backgroundContext.beginPath();
	
	// For the bottom part of the path
	backgroundContext.moveTo(0, 525);
	
	backgroundContext.lineTo(100, 525);
	backgroundContext.lineTo(100, 125);// Top
	backgroundContext.lineTo(200, 125);
	backgroundContext.lineTo(200, 525);// Bottom
	backgroundContext.lineTo(400, 525);
	backgroundContext.lineTo(400, 125);// Top
	backgroundContext.lineTo(500, 125);
	backgroundContext.lineTo(500, 525);// Bottom
	backgroundContext.lineTo(700, 525);
	backgroundContext.lineTo(700, 125);// Top
	backgroundContext.lineTo(800, 125);
	backgroundContext.lineTo(800, 525);// Bottom
	
	//Middle section to the side
	backgroundContext.lineTo(900, 525);
	backgroundContext.lineTo(900, 475);
	backgroundContext.lineTo(850, 475);
	
	// For the top part of the path
	backgroundContext.lineTo(850, 75);
	backgroundContext.lineTo(650, 75);
	backgroundContext.lineTo(650, 475);
	backgroundContext.lineTo(550, 475);
	backgroundContext.lineTo(550, 75);
	backgroundContext.lineTo(350, 75);
	backgroundContext.lineTo(350, 475);
	backgroundContext.lineTo(250, 475);
	backgroundContext.lineTo(250, 75);
	backgroundContext.lineTo(50, 75);
	backgroundContext.lineTo(50, 475);
	
	// End section
	backgroundContext.lineTo(0, 475);
	
	backgroundContext.fill();
	// backgroundContext.lineTo();


/***/ },
/* 3 */
/***/ function(module, exports) {

	// Canvas elements
	// dynamic contains the elements in the game that change during the game
	var dynamic = document.getElementById("dynamic");
	var dynamicContext = dynamic.getContext("2d");
	// use request animation frame
	
	function draw() {
	  
	}


/***/ }
/******/ ]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAgMmZjY2ZkZjAxMmVmOTE2YTdjMzkiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL2VudHJ5LmpzIiwid2VicGFjazovLy8uL3NyYy9qcy9iYWNrZ3JvdW5kLmpzIiwid2VicGFjazovLy8uL3NyYy9qcy9kaXNwbGF5LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSx1QkFBZTtBQUNmO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOzs7QUFHQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOzs7Ozs7Ozs7Ozs7OztBQ3RDQTtBQUNBO0FBQ0E7Ozs7Ozs7QUNGQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0Esb0NBQW1DO0FBQ25DO0FBQ0Esb0NBQW1DO0FBQ25DO0FBQ0Esb0NBQW1DO0FBQ25DO0FBQ0Esb0NBQW1DO0FBQ25DO0FBQ0Esb0NBQW1DO0FBQ25DO0FBQ0Esb0NBQW1DOztBQUVuQztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOzs7Ozs7O0FDM0RBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUEiLCJmaWxlIjoibWFpbi5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIgXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuXG4gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXG4gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSlcbiBcdFx0XHRyZXR1cm4gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uZXhwb3J0cztcblxuIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuIFx0XHR2YXIgbW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0gPSB7XG4gXHRcdFx0ZXhwb3J0czoge30sXG4gXHRcdFx0aWQ6IG1vZHVsZUlkLFxuIFx0XHRcdGxvYWRlZDogZmFsc2VcbiBcdFx0fTtcblxuIFx0XHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cbiBcdFx0bW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cbiBcdFx0Ly8gRmxhZyB0aGUgbW9kdWxlIGFzIGxvYWRlZFxuIFx0XHRtb2R1bGUubG9hZGVkID0gdHJ1ZTtcblxuIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG4gXHR9XG5cblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuXG4gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCIvc3JjL2pzL1wiO1xuXG4gXHQvLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbiBcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKDApO1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogd2VicGFjay9ib290c3RyYXAgMmZjY2ZkZjAxMmVmOTE2YTdjMzlcbiAqKi8iLCIvLyBDYW52YXNcbnJlcXVpcmUoXCIuL2JhY2tncm91bmQuanNcIik7XG5yZXF1aXJlKFwiLi9kaXNwbGF5LmpzXCIpO1xuXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL3NyYy9qcy9lbnRyeS5qc1xuICoqIG1vZHVsZSBpZCA9IDFcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsIi8vIGJhY2tncm91bmQgY29udGFpbnMgdGhlIHN0YXRpYyBjYW52YXMgZWxlbWVudHNcbnZhciBiYWNrZ3JvdW5kID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzdGF0aWNcIik7XG52YXIgYmFja2dyb3VuZENvbnRleHQgPSBiYWNrZ3JvdW5kLmdldENvbnRleHQoXCIyZFwiKTtcblxuLy8gU2V0dGluZ3MgZm9yIHRoZSBiYWNrZ3JvdW5kIC0gbW92ZSBvdXQgdG8gYSBzZXBhcmF0ZSBmaWxlXG52YXIgc2V0dGluZ3MgPSB7XG4gIGJhY2tncm91bmRDb2xvcjogXCIjOENEMUU2XCIsXG4gIHBhdGhDb2xvcjogXCJncmF5XCJcbn1cblxuLy8gRHJhd2luZyB0aGUgYmFja2dyb3VuZFxuYmFja2dyb3VuZENvbnRleHQuZmlsbFN0eWxlID0gc2V0dGluZ3MuYmFja2dyb3VuZENvbG9yO1xuYmFja2dyb3VuZENvbnRleHQuZmlsbFJlY3QoMCwwLGJhY2tncm91bmQud2lkdGgsYmFja2dyb3VuZC5oZWlnaHQpO1xuXG4vKiBNYWluIHBhdGggd2lsbCBnbyBmcm9tIFswLCA1MDBdLCBbNzUsIDUwMF0sIFs3NSwgMTAwXSwgWzIyNSwgMTAwXSwgWzIyNSwgNTAwXSwgWzM3NSwgNTAwXSwgWzM3NSwgMTAwXSwgWzUyNSwgMTAwXSwgWzUyNSwgNTAwXSwgWzY3NSwgNTAwXSwgWzY3NSwgMTAwXSwgWzgyNSwgMTAwXSwgWzgyNSwgNTAwXSwgWzkwMCwgNTAwXSAqL1xuXG4vLyBEcmF3aW5nIHRoZSBwYXRoIC0gd2lkdGggb2YgdGhlIHBhdGggaXMgNTBweFxuYmFja2dyb3VuZENvbnRleHQuZmlsbFN0eWxlID0gc2V0dGluZ3MucGF0aENvbG9yO1xuXG5iYWNrZ3JvdW5kQ29udGV4dC5iZWdpblBhdGgoKTtcblxuLy8gRm9yIHRoZSBib3R0b20gcGFydCBvZiB0aGUgcGF0aFxuYmFja2dyb3VuZENvbnRleHQubW92ZVRvKDAsIDUyNSk7XG5cbmJhY2tncm91bmRDb250ZXh0LmxpbmVUbygxMDAsIDUyNSk7XG5iYWNrZ3JvdW5kQ29udGV4dC5saW5lVG8oMTAwLCAxMjUpOy8vIFRvcFxuYmFja2dyb3VuZENvbnRleHQubGluZVRvKDIwMCwgMTI1KTtcbmJhY2tncm91bmRDb250ZXh0LmxpbmVUbygyMDAsIDUyNSk7Ly8gQm90dG9tXG5iYWNrZ3JvdW5kQ29udGV4dC5saW5lVG8oNDAwLCA1MjUpO1xuYmFja2dyb3VuZENvbnRleHQubGluZVRvKDQwMCwgMTI1KTsvLyBUb3BcbmJhY2tncm91bmRDb250ZXh0LmxpbmVUbyg1MDAsIDEyNSk7XG5iYWNrZ3JvdW5kQ29udGV4dC5saW5lVG8oNTAwLCA1MjUpOy8vIEJvdHRvbVxuYmFja2dyb3VuZENvbnRleHQubGluZVRvKDcwMCwgNTI1KTtcbmJhY2tncm91bmRDb250ZXh0LmxpbmVUbyg3MDAsIDEyNSk7Ly8gVG9wXG5iYWNrZ3JvdW5kQ29udGV4dC5saW5lVG8oODAwLCAxMjUpO1xuYmFja2dyb3VuZENvbnRleHQubGluZVRvKDgwMCwgNTI1KTsvLyBCb3R0b21cblxuLy9NaWRkbGUgc2VjdGlvbiB0byB0aGUgc2lkZVxuYmFja2dyb3VuZENvbnRleHQubGluZVRvKDkwMCwgNTI1KTtcbmJhY2tncm91bmRDb250ZXh0LmxpbmVUbyg5MDAsIDQ3NSk7XG5iYWNrZ3JvdW5kQ29udGV4dC5saW5lVG8oODUwLCA0NzUpO1xuXG4vLyBGb3IgdGhlIHRvcCBwYXJ0IG9mIHRoZSBwYXRoXG5iYWNrZ3JvdW5kQ29udGV4dC5saW5lVG8oODUwLCA3NSk7XG5iYWNrZ3JvdW5kQ29udGV4dC5saW5lVG8oNjUwLCA3NSk7XG5iYWNrZ3JvdW5kQ29udGV4dC5saW5lVG8oNjUwLCA0NzUpO1xuYmFja2dyb3VuZENvbnRleHQubGluZVRvKDU1MCwgNDc1KTtcbmJhY2tncm91bmRDb250ZXh0LmxpbmVUbyg1NTAsIDc1KTtcbmJhY2tncm91bmRDb250ZXh0LmxpbmVUbygzNTAsIDc1KTtcbmJhY2tncm91bmRDb250ZXh0LmxpbmVUbygzNTAsIDQ3NSk7XG5iYWNrZ3JvdW5kQ29udGV4dC5saW5lVG8oMjUwLCA0NzUpO1xuYmFja2dyb3VuZENvbnRleHQubGluZVRvKDI1MCwgNzUpO1xuYmFja2dyb3VuZENvbnRleHQubGluZVRvKDUwLCA3NSk7XG5iYWNrZ3JvdW5kQ29udGV4dC5saW5lVG8oNTAsIDQ3NSk7XG5cbi8vIEVuZCBzZWN0aW9uXG5iYWNrZ3JvdW5kQ29udGV4dC5saW5lVG8oMCwgNDc1KTtcblxuYmFja2dyb3VuZENvbnRleHQuZmlsbCgpO1xuLy8gYmFja2dyb3VuZENvbnRleHQubGluZVRvKCk7XG5cblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vc3JjL2pzL2JhY2tncm91bmQuanNcbiAqKiBtb2R1bGUgaWQgPSAyXG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iLCIvLyBDYW52YXMgZWxlbWVudHNcbi8vIGR5bmFtaWMgY29udGFpbnMgdGhlIGVsZW1lbnRzIGluIHRoZSBnYW1lIHRoYXQgY2hhbmdlIGR1cmluZyB0aGUgZ2FtZVxudmFyIGR5bmFtaWMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImR5bmFtaWNcIik7XG52YXIgZHluYW1pY0NvbnRleHQgPSBkeW5hbWljLmdldENvbnRleHQoXCIyZFwiKTtcbi8vIHVzZSByZXF1ZXN0IGFuaW1hdGlvbiBmcmFtZVxuXG5mdW5jdGlvbiBkcmF3KCkge1xuICBcbn1cblxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9zcmMvanMvZGlzcGxheS5qc1xuICoqIG1vZHVsZSBpZCA9IDNcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=